name: CI cross check
run-name: CI cross check on ${{ github.ref_name }}

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.json'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.txt'
  workflow_dispatch:

jobs:
  make_matrix:
    name: Create matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      MATRIX_FILE: matrix.jsonc
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: set-matrix
        run: |
          echo "matrix=$(grep -v '//' $MATRIX_FILE | jq -c '.')" >> "$GITHUB_OUTPUT"

  build:
    name: Build for ${{ matrix.target }}
    needs: make_matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJson(needs.make_matrix.outputs.matrix)}}
      max-parallel: 5
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Extract toolchain channel
        id: extract_toolchain
        shell: bash
        run: |
          TOOLCHAIN_CHANNEL=$(grep 'channel' rust-toolchain.toml | cut -d '"' -f 2)
          echo "Toolchain channel: $TOOLCHAIN_CHANNEL"
          echo "TOOLCHAIN_CHANNEL=$TOOLCHAIN_CHANNEL" >> $GITHUB_OUTPUT

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ steps.extract_toolchain.outputs.TOOLCHAIN_CHANNEL }}

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}

      - name: Build project
        run: cargo build --target ${{ matrix.target }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: poof-${{ matrix.target }}
          path: target/${{ matrix.target }}/debug/poof*
          if-no-files-found: error
          retention-days: 1
          compression-level: 0  # no compression
